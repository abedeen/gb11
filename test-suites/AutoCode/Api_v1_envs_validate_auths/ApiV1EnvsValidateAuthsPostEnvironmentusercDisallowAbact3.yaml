---
parent: Api_v1_envs_validate_auths
name: ApiV1EnvsValidateAuthsPostEnvironmentusercDisallowAbact3
description: Desc
authors:
- apisec Bot
type: SUITE
init:
- Environment1CreateUserAInitAbact3
localVariables: []
path: /api/v1/envs/validate/auths
endpoint: /api/v1/envs/validate/auths
method: POST
auth: UserC
headers:
- 'Accept: application/json'
- 'Content-Type: application/json'
testCases:
- id: 1
  body: |-
    {
      "auths" : [ {
        "accessTokenUri" : "{{@Random}}",
        "authType" : "No_Authentication",
        "authorizationScheme" : "query",
        "body" : "{{@Random}}",
        "clientAuthenticationScheme" : "query",
        "clientId" : "{{@Random}}",
        "clientSecret" : "{{@Random}}",
        "cmdCache" : "{{@Random}}",
        "contentType" : "{{@Random}}",
        "curlHeaders" : "{{@Random}}",
        "curlRequest" : "{{@Random}}",
        "curlResponse" : "{{@Random}}",
        "curlUrl" : "{{@Random}}",
        "curlVariables" : "{{@Random}}",
        "endpoint" : "{{@Random}}",
        "grantType" : "password",
        "header_1" : "{{@Random}}",
        "header_2" : "{{@Random}}",
        "header_3" : "{{@Random}}",
        "id" : "",
        "inactive" : false,
        "invalid" : false,
        "lastTestedOn" : null,
        "method" : "{{@Random}}",
        "methodToken" : "{{@Random}}",
        "name" : "{{@Random}}",
        "password" : "{{@PassAlphaNumSpl}}",
        "passwordMasked" : false,
        "preEstablishedRedirectUri" : "{{@Random}}",
        "preScript" : "{{@Random}}",
        "scope" : "{{@Random}}",
        "tokenAccess" : "{{@Random}}",
        "tokenName" : "{{@Random}}",
        "useCurrentUri" : false,
        "userAuthorizationUri" : "{{@Random}}",
        "username" : "{{@Faker.name.username}}"
      } ],
      "baseUrl" : "{{@Random}}",
      "createdBy" : "",
      "createdDate" : "",
      "description" : "{{@Random}}",
      "endpoint" : "{{@Random}}",
      "id" : "{{@Environment1CreateUserAInitAbact3_Response.data.id}}",
      "inactive" : false,
      "issueTracker" : {
        "account" : "{{@Random}}",
        "accountType" : "Slack",
        "id" : "",
        "issueType" : "{{@Random}}",
        "name" : "{{@Random}}",
        "projectKey" : "{{@Random}}",
        "url" : "{{@Random}}"
      },
      "localOffSet" : "{{@RandomInteger}}",
      "modifiedBy" : "",
      "modifiedDate" : "",
      "name" : "{{@Random}}",
      "projectCreation" : false,
      "projectId" : "{{@Random}}",
      "reachable" : false,
      "refId" : "{{@Random}}",
      "region" : "{{@Random}}",
      "testAuthResponses" : [ {
        "authName" : "{{@Random}}",
        "authType" : "{{@Random}}",
        "endpointResponse" : "{{@Random}}",
        "endpointUrl" : "{{@Random}}",
        "method" : "{{@Random}}",
        "oauthRequest" : "{{@Random}}",
        "oauthResponse" : "{{@Random}}"
      } ],
      "url" : "{{@Random}}",
      "urlReachableOn" : null,
      "version" : ""
    }
  inactive: false
useCategoryAssertion: false
assertions:
- '@StatusCode == 401 OR @StatusCode == 403'
cleanup: []
severity: High
category: ABAC_Level3
tags:
- V1
- Data_Access_Control
- '[2020 CWE TOP 22 ] CWE - 269'
- OWASP-API1
- OWASP API Security Top 10
- '[PCI DSS 3.2.1] 6.5.8'
- Broken Object Level Authorization
- Penetration Testing
inactive: false
policies:
  initExec: Request
  cleanupExec: Request
  logger: DEBUG
  timeoutSeconds: 300
  repeatOnFailure: 0
  repeat: 0
  repeatModule: null
  repeatDelay: 0
  unmaskToken: false
  postExecutionDelay: 0
  showResponse: true
autoGenerated: true
