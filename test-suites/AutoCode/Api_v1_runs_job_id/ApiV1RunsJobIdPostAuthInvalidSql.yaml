---
parent: Api_v1_runs_job_id
name: ApiV1RunsJobIdPostAuthInvalidSql
description: null
authors:
- apisec Bot
type: SUITE
init: []
localVariables: []
path: /api/v1/runs/job/{id}
endpoint: /api/v1/runs/job/{{@Var.id}}
method: POST
auth: Invalid_Auth_SQL
headers:
- 'Accept: application/json'
- 'Content-Type: application/json'
testCases:
- id: 1
  body: |-
    [ {
      "applyNotificationtoAll" : false,
      "categories" : "{{@Random}}",
      "closedIssues" : "{{@RandomInteger}}",
      "createdBy" : "",
      "createdDate" : "",
      "cron" : "{{@Random}}",
      "defaulton" : false,
      "description" : "{{@Random}}",
      "environment" : {
        "auths" : [ {
          "accessTokenUri" : "{{@Random}}",
          "authType" : "Certificate",
          "authorizationScheme" : "header",
          "body" : "{{@Random}}",
          "clientAuthenticationScheme" : "none",
          "clientId" : "{{@Random}}",
          "clientSecret" : "{{@Random}}",
          "cmdCache" : "{{@Random}}",
          "contentType" : "{{@Random}}",
          "curlHeaders" : "{{@Random}}",
          "curlRequest" : "{{@Random}}",
          "curlResponse" : "{{@Random}}",
          "curlUrl" : "{{@Random}}",
          "curlVariables" : "{{@Random}}",
          "endpoint" : "{{@Random}}",
          "grantType" : "authorization_code",
          "header_1" : "{{@Random}}",
          "header_2" : "{{@Random}}",
          "header_3" : "{{@Random}}",
          "id" : "",
          "inactive" : false,
          "invalid" : false,
          "lastTestedOn" : null,
          "method" : "{{@Random}}",
          "methodToken" : "{{@Random}}",
          "name" : "{{@Random}}",
          "password" : "{{@PassAlphaNumSpl}}",
          "passwordMasked" : false,
          "preEstablishedRedirectUri" : "{{@Random}}",
          "preScript" : "{{@Random}}",
          "scope" : "{{@Random}}",
          "tokenAccess" : "{{@Random}}",
          "tokenName" : "{{@Random}}",
          "useCurrentUri" : false,
          "userAuthorizationUri" : "{{@Random}}",
          "username" : "{{@Faker.name.username}}"
        } ],
        "baseUrl" : "{{@Random}}",
        "createdBy" : "",
        "createdDate" : "",
        "description" : "{{@Random}}",
        "endpoint" : "{{@Random}}",
        "id" : "",
        "inactive" : false,
        "issueTracker" : {
          "account" : "{{@Random}}",
          "accountType" : "Http",
          "id" : "",
          "issueType" : "{{@Random}}",
          "name" : "{{@Random}}",
          "projectKey" : "{{@Random}}",
          "url" : "{{@Random}}"
        },
        "localOffSet" : "{{@RandomInteger}}",
        "modifiedBy" : "",
        "modifiedDate" : "",
        "name" : "{{@Random}}",
        "projectCreation" : false,
        "projectId" : "{{@Random}}",
        "reachable" : false,
        "refId" : "{{@Random}}",
        "region" : "{{@Random}}",
        "testAuthResponses" : [ {
          "authName" : "{{@Random}}",
          "authType" : "{{@Random}}",
          "endpointResponse" : "{{@Random}}",
          "endpointUrl" : "{{@Random}}",
          "method" : "{{@Random}}",
          "oauthRequest" : "{{@Random}}",
          "oauthResponse" : "{{@Random}}"
        } ],
        "url" : "{{@Random}}",
        "urlReachableOn" : null,
        "version" : ""
      },
      "id" : "",
      "inactive" : false,
      "issueTracker" : {
        "account" : "{{@Random}}",
        "accountType" : "Local",
        "assigneeAccountId" : "{{@Random}}",
        "folderName" : "{{@Random}}",
        "id" : "",
        "inactive" : false,
        "issueType" : "{{@Random}}",
        "labels" : "{{@Random}}",
        "name" : "{{@Random}}",
        "projectKey" : "{{@Random}}",
        "skipLogging" : false,
        "syncAll" : false,
        "url" : "{{@Random}}"
      },
      "issueTrackerToDo" : false,
      "logPolicy" : "DEBUG",
      "modifiedBy" : "",
      "modifiedDate" : "",
      "name" : "{{@Random}}",
      "nextFire" : null,
      "notificationToDo" : false,
      "notifications" : [ {
        "account" : "{{@Random}}",
        "channel" : "{{@Random}}",
        "id" : "",
        "name" : "{{@Random}}",
        "notificationType" : "Git",
        "skipNotification" : false,
        "to" : "{{@Random}}"
      } ],
      "openIssues" : "{{@RandomInteger}}",
      "project" : {
        "createdBy" : "",
        "createdDate" : "",
        "id" : "",
        "inactive" : false,
        "modifiedBy" : "",
        "modifiedDate" : "",
        "name" : "{{@Random}}",
        "org" : {
          "createdBy" : "",
          "createdDate" : "",
          "id" : "",
          "inactive" : false,
          "modifiedBy" : "",
          "modifiedDate" : "",
          "name" : "{{@Random}}",
          "orgPlan" : "{{@Random}}",
          "version" : ""
        },
        "version" : ""
      },
      "refId" : "{{@Random}}",
      "regions" : "{{@Random}}",
      "tags" : [ "{{@Random}}" ],
      "timeZone" : "{{@Faker.address.timeZone}}",
      "version" : ""
    } ]
  inactive: false
useCategoryAssertion: false
assertions:
- '@ResponseTime < 7000'
cleanup: []
severity: Critical
category: InvalidAuthSQL
tags:
- V1
- OWASP-API2
- '[PCI DSS 3.0] 6.5.1'
- OTG-AUTHN-004
- OWASP API Security Top 10
- Broken Authentication
- Non-Intrusive
- Injection
- '[2020 CWE TOP 14] CWE - 287'
- '[MITRE ATT&CK] T1595.002'
inactive: false
policies:
  initExec: Request
  cleanupExec: Request
  logger: DEBUG
  timeoutSeconds: 300
  repeatOnFailure: 0
  repeat: 0
  repeatModule: '@APIsec/Common/auth_invalid_sql'
  repeatDelay: 0
  unmaskToken: true
  postExecutionDelay: 0
  showResponse: true
autoGenerated: true
