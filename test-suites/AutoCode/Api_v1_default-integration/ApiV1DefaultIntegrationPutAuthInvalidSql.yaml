---
parent: Api_v1_default-integration
name: ApiV1DefaultIntegrationPutAuthInvalidSql
description: null
authors:
- apisec Bot
type: SUITE
init: []
localVariables: []
path: /api/v1/default-integration
endpoint: /api/v1/default-integration
method: PUT
auth: Invalid_Auth_SQL
headers:
- 'Accept: application/json'
- 'Content-Type: application/json'
testCases:
- id: 1
  body: |-
    {
      "account" : {
        "accessKey" : "{{@Var.accessKey}}",
        "accountType" : "{{@Var.accountType}}",
        "allowedRegions" : [ "{{@Random}}" ],
        "autoOnboard" : false,
        "bucketName" : "{{@Var.bucketName}}",
        "createdBy" : "{{@Var.createdBy}}",
        "createdDate" : "{{@Var.createdDate}}",
        "id" : "{{@Var.id}}",
        "inactive" : false,
        "isDefaultStore" : false,
        "isSSH" : false,
        "isdefault" : false,
        "modifiedBy" : "{{@Var.modifiedBy}}",
        "modifiedDate" : "{{@Var.modifiedDate}}",
        "name" : "{{@Var.name}}",
        "org" : {
          "createdBy" : "{{@Var.createdBy}}",
          "createdDate" : "{{@Var.createdDate}}",
          "id" : "{{@Var.id}}",
          "inactive" : false,
          "modifiedBy" : "{{@Var.modifiedBy}}",
          "modifiedDate" : "{{@Var.modifiedDate}}",
          "name" : "{{@Var.name}}",
          "orgPlan" : "{{@Var.orgPlan}}",
          "version" : "{{@Var.version}}"
        },
        "ownerName" : "{{@Var.ownerName}}",
        "prop1" : "{{@Var.prop1}}",
        "prop2" : "{{@Var.prop2}}",
        "prop3" : "{{@Var.prop3}}",
        "region" : "{{@Var.region}}",
        "secretKey" : "{{@Var.secretKey}}",
        "version" : "{{@Var.version}}"
      },
      "accountFor" : "{{@Var.accountFor}}",
      "accountId" : "{{@Var.accountId}}",
      "createdBy" : "{{@Var.createdBy}}",
      "createdDate" : "{{@Var.createdDate}}",
      "gitBackup" : [ {
        "gitUrl" : "{{@Random}}"
      } ],
      "id" : "{{@Var.id}}",
      "inactive" : false,
      "issueTracker" : [ {
        "account" : "{{@Random}}",
        "accountType" : "GCP",
        "assigneeAccountId" : "{{@Random}}",
        "folderName" : "{{@Random}}",
        "issueType" : "{{@Random}}",
        "labels" : "{{@Random}}",
        "projectKey" : "{{@Random}}",
        "url" : "{{@Random}}"
      } ],
      "modifiedBy" : "{{@Var.modifiedBy}}",
      "modifiedDate" : "{{@Var.modifiedDate}}",
      "name" : "{{@Var.name}}",
      "notification" : [ {
        "account" : "{{@Random}}",
        "channel" : "{{@Random}}",
        "notificationType" : "BitBucket",
        "skipNotification" : false,
        "to" : "{{@Random}}"
      } ],
      "orgId" : "{{@Var.orgId}}",
      "report" : [ {
        "allowedRegions" : "{{@Random}}",
        "bucketName" : "{{@Random}}",
        "prop1" : "{{@Random}}",
        "prop2" : "{{@Random}}",
        "prop3" : "{{@Random}}"
      } ],
      "version" : "{{@Var.version}}"
    }
  inactive: false
useCategoryAssertion: false
assertions:
- '@ResponseTime < 7000'
cleanup: []
severity: Critical
category: InvalidAuthSQL
tags:
- V1
- OWASP-API2
- '[PCI DSS 3.0] 6.5.1'
- OTG-AUTHN-004
- OWASP API Security Top 10
- Broken Authentication
- Non-Intrusive
- Injection
- '[2020 CWE TOP 14] CWE - 287'
- '[MITRE ATT&CK] T1595.002'
inactive: false
policies:
  initExec: Request
  cleanupExec: Request
  logger: DEBUG
  timeoutSeconds: 300
  repeatOnFailure: 0
  repeat: 0
  repeatModule: '@APIsec/Common/auth_invalid_sql'
  repeatDelay: 0
  unmaskToken: true
  postExecutionDelay: 0
  showResponse: true
autoGenerated: true
